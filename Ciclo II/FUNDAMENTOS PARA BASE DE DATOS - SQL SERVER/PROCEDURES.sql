CREATE DATABASE PRUEBA
GO

USE PRUEBA
GO

--EJERCICIO 1
--CREANDO EL PROCEDIMIENTO ALMACENADO
CREATE PROCEDURE SP_POSITIVO_NEGATIVO
@VALOR INT,
@RESULTADO VARCHAR(20) OUTPUT
AS
   IF @VALOR>0 SET @RESULTADO='ES POSITIVO'
   IF @VALOR<0 SET @RESULTADO='ES NEGATIVO'
   IF @VALOR=0 SET @RESULTADO='ES NEUTRO'
GO

--PROBANDO EL PROCEDIMIENTO ALMACENADO
DECLARE @RES VARCHAR(20)
SET @RES=''
EXECUTE SP_POSITIVO_NEGATIVO 0, @RES OUTPUT
PRINT @RES
EXECUTE SP_POSITIVO_NEGATIVO -5, @RES OUTPUT
PRINT @RES
EXECUTE SP_POSITIVO_NEGATIVO 5, @RES OUTPUT
PRINT @RES


--EJERCICIO 2:
CREATE PROCEDURE SP_BISIESTO
@AN INT,
@RESULTADO VARCHAR(20) OUTPUT
AS
   DECLARE @Q INT,@R INT
   SET @Q=@AN/4
   SET @R=@AN - (@Q * 4)
   IF @R=0 SET @RESULTADO='SI ES AÑO BISIESTO'
   IF @R>0 SET @RESULTADO='NO ES AÑO BISIESTO'
GO

--PRUEBA DEL PROCEDIMIENTO ALMACENADO
DECLARE @RES VARCHAR(20)
SET @RES=''
EXECUTE SP_BISIESTO 2000,@RES OUTPUT
PRINT @RES



--TERCER EJERCICIO

CREATE PROCEDURE SP_SIGNOCHINO
@AN INT,
@RESULTADO VARCHAR(20) OUTPUT
AS
   DECLARE @Q INT,@R INT,@DIF INT
   SET @DIF=@AN - 1900
   SET @Q=@DIF/12
   SET @R=@DIF - (@Q * 12)
   IF @R=0 SET @RESULTADO='SU SIGNO ES RATA'
   IF @R=1 SET @RESULTADO='SU SIGNO ES BUEY'
   IF @R=2 SET @RESULTADO='SU SIGNO ES TIGRE'
   IF @R=3 SET @RESULTADO='SU SIGNO ES CONEJO'
   IF @R=4 SET @RESULTADO='SU SIGNO ES DRAGON'
   IF @R=5 SET @RESULTADO='SU SIGNO ES SERPIENTE'
   IF @R=6 SET @RESULTADO='SU SIGNO ES CABALLO'
   IF @R=7 SET @RESULTADO='SU SIGNO ES CABRA'
   IF @R=8 SET @RESULTADO='SU SIGNO ES MONO'
   IF @R=9 SET @RESULTADO='SU SIGNO ES GALLO'
   IF @R=10 SET @RESULTADO='SU SIGNO ES PERRO'
   IF @R=11 SET @RESULTADO='SU SIGNO ES CERDO'
GO
--PRUEBA DEL PROCEDIMIENTO ALMACENADO
DECLARE @RES VARCHAR(20)
SET @RES=''
EXECUTE SP_SIGNOCHINO 1970,@RES OUTPUT
PRINT @RES



CREATE TABLE LIBRO(
       CODLIB VARCHAR(5) PRIMARY KEY NOT NULL,		
       TITULOLIB VARCHAR(40),		
       AUTORLIB  VARCHAR(30),		
       EDITOLIB  VARCHAR(15),		
       AREALIB   VARCHAR(15),		
       PRECIOLIB NUMERIC(8,2),	
       NHOJASLIB INT,			
       ANOLIB    INT)

GO


--CARGADATOS LIBROS
INSERT INTO LIBRO VALUES('1000','VISUAL FOX','RUBEN IGLESIAS','RAMA','LPROG',60,489,1997)
INSERT INTO LIBRO VALUES('1001','POWER BUILDER 6.','RAMIRO HOOL','UNI','LPROG',80,410,1999)
INSERT INTO LIBRO VALUES('1002','ANALISIS Y DISEÑO DE SIST.','KENDALL & KENDALL','PRINTICE HALL','ANALISIS',100,913,1997)
INSERT INTO LIBRO VALUES('1003','POWER BUILDER 6.','WILLIAM B. HEYS','QUE','LPROG',150,843,1999)
INSERT INTO LIBRO VALUES('1004','VISUAL BASIC','CESAR BUSTAMANTE','GRAPPERU','LPROG',35,390,1997)
INSERT INTO LIBRO VALUES('1005','VISUAL FOX PRO','LES & JHON PINTER','MC GRAWHILL','LPROG',25,567,1997)
INSERT INTO LIBRO VALUES('1006','GUIA C++','JULIO VASQUEZ PARAGULLAS','UPSMP','LPROG',50,780,1997)
INSERT INTO LIBRO VALUES('1007','MS C++','BECK ZARATIAN','MICROSOFT','LPROG',80,600,1999)
INSERT INTO LIBRO VALUES('1008','VISUAL FOX PRO 6.00','CESAR BUSTAMANTE','UNI','LPROG',35,450,1999)
INSERT INTO LIBRO VALUES('1009','AUTOCAD 2000','J.A. TAJADURA J. LOPEZ','MC GRAW HILL','CAD',40,480,1998)
INSERT INTO LIBRO VALUES('1010','EFECTOS COREL','ANOMINO','MACRO','ARTE',50,400,1998)
INSERT INTO LIBRO VALUES('1011','EL VENDEDOR MAS GRANDE DEL MUNDO','OG MANDINO','DIANA','LIDERAZGO',15,121,1968)
INSERT INTO LIBRO VALUES('1012','EL PODER DEL CARISMA','MIGUEL ANGEL CORNEJO','ESTRELLA','LIDERAZGO',15,123,1992)
INSERT INTO LIBRO VALUES('1013','7 HABITOS DE LA GENTE EFECTIVA','STEPHEN  R. COVER','PAIDOS','LIDERAZGO',50,460,1989)
INSERT INTO LIBRO VALUES('1014','CRITERIOS EVA. PROY.','NASSIR SAPAG CHAIN','MC GRAW HILL','PROYECTOS',10,144,1997)
INSERT INTO LIBRO VALUES('1015','COMO DIRIGIR MICRO EMP.','VICTOR ABAD G.','IPEDE','PROYECTOS',10,110,1995)
INSERT INTO LIBRO VALUES('1016','LA MAGIA DE PENSAR EN GRANDE','DAVID JASEPH SCHWRTZ','HERREROS MEX','LIDERAZGO',10,258,1960)
INSERT INTO LIBRO VALUES('1017','SQL SERVER VB','WILLIAM R. VAUGHN','MICROSOFT','LPROG',60,1000,1999)
INSERT INTO LIBRO VALUES('1018','VISUAL FOX 6.00','MENACHEN BAZIAN','QUE','LPROG',55,1000,1999)
INSERT INTO LIBRO VALUES('1019','INTELIGENCIA EMOCIONAL','DANIEL GOLEMAN','ZETA','LIDERAZGO',48,396,1996)
INSERT INTO LIBRO VALUES('1020','LA TERCERA OLA','ALVIN TOFFLER','MC GRAW HILL','LIDERAZGO',50,250,1998)

--CONSULTA 1
SELECT * FROM LIBRO
SELECT TITULOLIB, AUTORLIB, AREALIB FROM LIBRO

--CREANDO EL PROCEDIMIENTO ALMACENADO
CREATE PROCEDURE SP_CONSULTA1
AS
   SELECT TITULOLIB, AUTORLIB, AREALIB FROM LIBRO
GO

--PRUEBA DEL PROCEDIMIENTO ALMACENADO
EXECUTE SP_CONSULTA1
GO


SELECT TITULOLIB,TIEMPO=(NHOJASLIB*8)/ 60 FROM LIBRO
--CONSULTA 2

CREATE PROCEDURE SP_CONSULTA2
AS
   SELECT TITULOLIB,TIEMPO=(NHOJASLIB*8)/ 60 FROM LIBRO
GO
--PROBANDO EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_CONSULTA2
GO

--CONSULTA 2
CREATE PROCEDURE SP_CONSULTA2
@EDITORIAL VARCHAR(50)
AS
   SELECT * FROM LIBRO WHERE EDITOLIB=@EDITORIAL
GO

--PROBANDO EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_CONSULTA2 'MICROSOFT'
go

CREATE PROCEDURE SP_CONSULTA3
@AL VARCHAR(20)
AS
	SELECT 'EL MONTO DEL AREA ' + @AL + ' ES: ' + CONVERT(VARCHAR,SUM(PRECIOLIB))
	FROM LIBRO WHERE AREALIB=@AL
GO

EXECUTE SP_CONSULTA3 'LPROG'
EXECUTE SP_CONSULTA3 'ANALISIS'
EXECUTE SP_CONSULTA3 'ARTE'
EXECUTE SP_CONSULTA4 'LIDERAZGO'


SELECT * FROM LIBRO
go

--GRABAR LIBRO
Create Procedure SP_Grabar_Libro(
@Codigo Varchar(5), @Titulo Varchar(40), @Autor Varchar(30),
@Editorial Varchar(15), @Area Varchar(15), @Precio Numeric(8,2),
@Hojas Int, @Anno Int)
AS
	IF NOT EXISTS (SELECT * FROM Libro WHERE CODLIB = @Codigo)
	BEGIN
		Insert into Libro Values (@Codigo, @Titulo, @Autor, @Editorial,
	                              @Area, @Precio, @Hojas, @Anno)
    END
    ELSE
    BEGIN
       PRINT 'ERROR: EL LIBRO YA EXISTE'
    END
Go

-- PRUEBA DEL PROCEDMIENTO ALMACENADO.

EXECUTE SP_Grabar_Libro 1021, 'La casa Verde', 'Mario Vargas Llosa', 'RAMA',
	                          'NOVELA', 150.00, 100, 1995
Go
SELECT * FROM LIBRO
Go


Create Procedure SP_Consultar_Libro (
@Codigo Varchar(5))
AS
	IF EXISTS (SELECT * FROM Libro WHERE CODLIB = @Codigo)
	BEGIN
		SELECT *
		FROM LIBRO
		WHERE CODLIB = @Codigo
    END
    ELSE
    BEGIN
       PRINT 'ERROR: EL LIBRO NO EXISTE'
    END
Go

-- Prueba del Procedimiento
EXECUTE SP_Consultar_Libro '1000'



-- ACTUALIZACION
--MODIFICAR LIBRO
Create Procedure SP_Actualizar_Libro(
@Codigo Varchar(5), @Titulo Varchar(40), @Autor Varchar(30),
@Editorial Varchar(15), @Area Varchar(15), @Precio Numeric(8,2),
@Hojas Int, @Anno Int)
AS
	IF EXISTS (SELECT * FROM Libro WHERE CODLIB = @Codigo)
	BEGIN
		Update Libro Set CODLIB=@Codigo, TITULOLIB=@Titulo, AUTORLIB= @Autor,
		                 EDITOLIB = @Editorial, AREALIB=@Area, PRECIOLIB=@Precio,
						 NHOJASLIB = @Hojas,ANOLIB= @Anno
		Where CODLIB=@Codigo
    END
    ELSE
    BEGIN
       PRINT 'ERROR: EL LIBRO NO EXISTE'
    END
Go

-- PRUEBA
EXECUTE SP_Actualizar_Libro '1000','ABCDEFG','GREEN','LORD','ABC',100, 50, 2021
Go

SELECT * FROM LIBRO
Go
