
--ELIMINANDO LAS TABLAS SI EN CASOS EXISTIERAN.
DROP TABLE COMPROBANTE;
DROP TABLE DETALLE_PEDIDO;
DROP TABLE CABECERA_PEDIDO;
DROP TABLE CLIENTE;
DROP TABLE EMPLEADO;
DROP TABLE PRODUCTO;

CREATE TABLE CLIENTE
(
	IdCli                VARCHAR2(5) NOT NULL ,
	Nombre               VARCHAR2(50) NOT NULL ,
	Ruc                  VARCHAR2(11) NOT NULL ,
	Direccion            VARCHAR2(50) NOT NULL ,
	Estado               VARCHAR2(20) NOT NULL ,
    PRIMARY KEY (IdCli)
);

CREATE TABLE EMPLEADO
(
	IdEmp                VARCHAR2(5) NOT NULL ,
	Nombre               VARCHAR2(50) NOT NULL ,
	Ruc                  VARCHAR2(11) NOT NULL ,
	Direccion            VARCHAR2(50) NOT NULL ,
	Estado               VARCHAR2(20) NOT NULL ,
    PRIMARY KEY (IdEmp)
);

CREATE TABLE CABECERA_PEDIDO
(
	IdPedido             VARCHAR2(5) NOT NULL ,
	IdCli                VARCHAR2(5) NULL ,
	IdEmp                VARCHAR2(5) NULL ,
	Estado               VARCHAR2(20) NOT NULL ,
    PRIMARY KEY (IdPedido),
    FOREIGN KEY (IdCli) REFERENCES CLIENTE (IdCli),
    FOREIGN KEY (IdEmp) REFERENCES EMPLEADO (IdEmp)
);

CREATE TABLE COMPROBANTE
(
	TipCom               VARCHAR2(20) NOT NULL ,
	NComp                VARCHAR2(5) NOT NULL ,
	IdPedido             VARCHAR2(5) NULL ,
	Estado               VARCHAR2(20) NOT NULL ,
    PRIMARY KEY (TipCom,NComp),
    FOREIGN KEY (IdPedido) REFERENCES CABECERA_PEDIDO (IdPedido)
);

CREATE TABLE PRODUCTO
(
	IdProd               VARCHAR2(5) NOT NULL ,
	Nombre               VARCHAR2(50) NOT NULL ,
	Precio               NUMBER(10, 2) NOT NULL ,
	Stock                INTEGER NOT NULL ,
	Estado               VARCHAR2(20) NOT NULL ,
    PRIMARY KEY (IdProd)
);

CREATE TABLE DETALLE_PEDIDO
(
	Item                 INTEGER NOT NULL ,
	IdPedido             VARCHAR2(5) NOT NULL ,
	IdProd               VARCHAR2(5) NULL ,
	Cant                 INTEGER NOT NULL ,
    PRIMARY KEY (Item,IdPedido),
    FOREIGN KEY (IdProd) REFERENCES PRODUCTO (IdProd),
    FOREIGN KEY (IdPedido) REFERENCES CABECERA_PEDIDO (IdPedido)
);

INSERT INTO CLIENTE VALUES('C0001','PEREZ CASTRO JORGE','10545878987','AV. PERU 1234 SMP','ACTIVO');
INSERT INTO CLIENTE VALUES('C0002','SANCHEZ SALAS CARMEN','10254587897','AV. SAENZ PEÑA 120 CALLAO','BLOQUEADO');
INSERT INTO CLIENTE VALUES('C0003','CAMPOS LOPEZ EDUARDO','10547848757','JR. HUASCAR 323 SJL','ACTIVO');
INSERT INTO CLIENTE VALUES('C0004','VERASTEGUI VARGAS JULIAN','10125458787','AV. LOS TULIPANES 928 SJM','BLOQUEADO');
INSERT INTO CLIENTE VALUES('C0005','FERNANDEZ PEREZ ELIZABETH','10545878987','AV. NICOLAS DE PIEROLA 245 LIMA CERCADO','ACTIVO');
COMMIT;

INSERT INTO EMPLEADO VALUES('E0001','RODRIGUEZ CARPIO ALEXANDRA','10546996567','AV. LOS HEROES 2545 SJM','ACTIVO'); 
INSERT INTO EMPLEADO VALUES('E0002','CARPIO LORENZO JUAN','10456321547','JR. HUARAZ 654 BREÑA','ACTIVO');
INSERT INTO EMPLEADO VALUES('E0003','GAMARRA SANCHEZ ANA','10555989877','JR. LAS ALMENDRAS 323 LOS OLIVOS','BLOQUEADO');
INSERT INTO EMPLEADO VALUES('E0004','JAUREGUI DALTANO JULY','10223235697','AV. PERU 3223 SMP','ACTIVO');
INSERT INTO EMPLEADO VALUES('E0005','PEREZ ARBIETO JUAN','10525656587','JR. LAS CAMPANITAS SAN BORJA','BLOQUEADO');
COMMIT;

INSERT INTO PRODUCTO VALUES('P0001','TV. COLOR LED 42P SMART',1599.99,47,'ACTIVO');
INSERT INTO PRODUCTO VALUES('P0002','TV. COLOR LED 55P SMART',2499.99,0,'BLOQUEADO');
INSERT INTO PRODUCTO VALUES('P0003','REFRIGERADOR 14P3 FROZEN',1299.99,47,'ACTIVO');
INSERT INTO PRODUCTO VALUES('P0004','REFRIGERADOR 16P3 FROZEN',1899.99,0,'BLOQUEADO');
INSERT INTO PRODUCTO VALUES('P0005','LAVADORA 8KG CENTRIFUGADORA LAVA-SECA',2599.99,43,'ACTIVO');
INSERT INTO PRODUCTO VALUES('P0006','LAVADORA 10KG CENTRIFUGADORA LAVA-SECA',2899.99,47,'ACTIVO');
INSERT INTO PRODUCTO VALUES('P0007','HORNO MICROONDAS SMART-COOLER',259.99,0,'BLOQUEADO');
INSERT INTO PRODUCTO VALUES('P0008','BLU-RAY - DVD ',249.99,0,'BLOQUEADO');
INSERT INTO PRODUCTO VALUES('P0009','TV. COLOR LED 32P SMART',999.99,22,'ACTIVO');
INSERT INTO PRODUCTO VALUES('P0010','CPU 3.2GB HD 1T DDR3 4GB PLACA BASE INTEL G8748B',1500.00,45,'ACTIVO');
COMMIT;

--3 PEDIDOS
INSERT INTO CABECERA_PEDIDO VALUES('00001','C0001','E0001','EMITIDO');
INSERT INTO CABECERA_PEDIDO VALUES('00002','C0003','E0002','EMITIDO');
INSERT INTO CABECERA_PEDIDO VALUES('00003','C0005','E0004','EMITIDO');
COMMIT;

--3 DETALLES DE PEDIDO
INSERT INTO DETALLE_PEDIDO VALUES(1,'00001','P0001',3);
INSERT INTO DETALLE_PEDIDO VALUES(2,'00001','P0003',3);
INSERT INTO DETALLE_PEDIDO VALUES(3,'00001','P0005',3);
COMMIT;

INSERT INTO DETALLE_PEDIDO VALUES(1,'00002','P0006',3);
INSERT INTO DETALLE_PEDIDO VALUES(2,'00002','P0009',3);
INSERT INTO DETALLE_PEDIDO VALUES(3,'00002','P0010',3);
COMMIT;

INSERT INTO DETALLE_PEDIDO VALUES(1,'00003','P0009',5);
INSERT INTO DETALLE_PEDIDO VALUES(2,'00003','P0010',2);
INSERT INTO DETALLE_PEDIDO VALUES(3,'00003','P0005',4);
COMMIT;

--REALIZANDO LA VENTA
INSERT INTO COMPROBANTE VALUES('BOLETA','B0001','00001','PAGADO');
INSERT INTO COMPROBANTE VALUES('FACTURA','F0001','00002','PAGADO');
INSERT INTO COMPROBANTE VALUES('BOLETA','B0002','00003','EMITIDA');
COMMIT;

SELECT * FROM CLIENTE;
SELECT * FROM EMPLEADO;
SELECT * FROM PRODUCTO;
SELECT * FROM CABECERA_PEDIDO;
SELECT * FROM DETALLE_PEDIDO;
SELECT * FROM COMPROBANTE;


--EJERCICIO 1:
--Se pide crear un cursor que sea capaz de mostrar los pedidos realizados,
--según la tabla CABECERA_PEDIDO esta tiene 3 pedidos estos son: ‘00001’,
--‘00002’ y ‘00003’, para ello se debe ingresar el número del pedido, 
--por intermedio de variables de sustitución &, y brindar la información 
--solicitada, tal como se muestran en las siguientes imágenes

--SOLUCION:
SET SERVEROUTPUT ON;
DECLARE
    It          DETALLE_PEDIDO.ITEM%TYPE;
    CodigoP     CABECERA_PEDIDO.IDPEDIDO%TYPE:=&CodigoP;
    CodigoC     CABECERA_PEDIDO.IDCLI%TYPE;
    CodigoE     CABECERA_PEDIDO.IDEMP%TYPE;
    Est         CABECERA_PEDIDO.ESTADO%TYPE;
    NombreCli   CLIENTE.NOMBRE%TYPE;
    NombreEmp   EMPLEADO.NOMBRE%TYPE;
    NombreProd  PRODUCTO.NOMBRE%TYPE;
    CantProd    DETALLE_PEDIDO.CANT%TYPE;
    PreProd     PRODUCTO.PRECIO%TYPE;
    ImpCompra   NUMBER(10,2);
    TOTAL_IMPORTE NUMBER(10,2):=0;
    CURSOR DETALLE IS (SELECT D.ITEM, P.NOMBRE, D.CANT,
                       P.PRECIO, (D.CANT* P.PRECIO) IMPORTE
                       FROM DETALLE_PEDIDO D, PRODUCTO P
                       WHERE D.IDPROD = P.IDPROD AND
                             D.IDPEDIDO = CodigoP);
BEGIN
       SELECT IDPEDIDO,IDCLI, IDEMP, ESTADO
       INTO CodigoP, CodigoC,CodigoE, Est 
       FROM CABECERA_PEDIDO WHERE IDPEDIDO=CodigoP;
       
       SELECT NOMBRE INTO NombreCli FROM CLIENTE WHERE IDCLI=CodigoC;
       SELECT NOMBRE INTO NombreEmp FROM EMPLEADO WHERE IDEMP=CodigoE;
       DBMS_OUTPUT.PUT_LINE('==================================================');
       DBMS_OUTPUT.PUT_LINE('IMPORTADORA - LAS CAMELIAS S.A');
       DBMS_OUTPUT.PUT_LINE('==================================================');
       DBMS_OUTPUT.PUT_LINE('PEDIDO Nº : ' || CodigoP);
       DBMS_OUTPUT.PUT_LINE('CLIENTE   : ' || NombreCli);
       DBMS_OUTPUT.PUT_LINE('EMPLEADO  : ' || NombreEmp);
       DBMS_OUTPUT.PUT_LINE('==================================================');
       OPEN DETALLE;
       FETCH DETALLE INTO It, NombreProd, CantProd, PreProd, ImpCompra;
       WHiLE DETALLE%Found
       LOOP
           DBMS_OUTPUT.PUT_LINE(It || CHR(9) || NombreProd || CHR(9));
           DBMS_OUTPUT.PUT_LINE(CHR(9) || 'Cantidad: ' ||CantProd || CHR(9) ||
           'Precio: ' ||PreProd || CHR(9) || 'Importe: ' ||ImpCompra);
           DBMS_OUTPUT.PUT_LINE('==================================================');
           FETCH DETALLE INTO It, NombreProd, CantProd, PreProd, ImpCompra;
       END LOOP;
       SELECT SUM(D.CANT* P.PRECIO) INTO TOTAL_IMPORTE FROM DETALLE_PEDIDO D, PRODUCTO P
       WHERE D.IDPROD = P.IDPROD AND D.IDPEDIDO = CodigoP;
       DBMS_OUTPUT.PUT_LINE('TOTAL IMPORTE: ' || TOTAL_IMPORTE);
       DBMS_OUTPUT.PUT_LINE('==================================================');
     CLOSE DETALLE;
END;




--EJERCICIO 2:
--Se pide crear un cursor que sea capaz de mostrar datos de las facturas que han
--sido realizadas como PAGADAS, según la tabla COMPROBANTE, esta tiene 3 documentos
--(1 factura y 2 boletas) estos son: ‘F0001’, ‘B0001’ y ‘B0002’

--SOLUCION:
SET SERVEROUTPUT ON;
DECLARE
    It          DETALLE_PEDIDO.ITEM%TYPE;
    CodigoF     COMPROBANTE.NCOMP%TYPE:=&CodigoF;
    CodigoP     CABECERA_PEDIDO.IDPEDIDO%TYPE;
    CodigoC     CABECERA_PEDIDO.IDCLI%TYPE;
    CodigoE     CABECERA_PEDIDO.IDEMP%TYPE;
    Est         CABECERA_PEDIDO.ESTADO%TYPE;
    NombreCli   CLIENTE.NOMBRE%TYPE;
    NombreEmp   EMPLEADO.NOMBRE%TYPE;
    NombreProd  PRODUCTO.NOMBRE%TYPE;
    CantProd    DETALLE_PEDIDO.CANT%TYPE;
    PreProd     PRODUCTO.PRECIO%TYPE;
    ImpCompra   NUMBER(10,2);
    TOTAL_IMPORTE NUMBER(10,2):=0;
    IGV NUMBER(10,2):=0;
    TOTAL_GENERAL NUMBER(10,2):=0;
    CURSOR DETALLE IS (SELECT D.ITEM, P.NOMBRE, D.CANT,
                       P.PRECIO, (D.CANT* P.PRECIO) IMPORTE
                       FROM DETALLE_PEDIDO D, PRODUCTO P, COMPROBANTE C
                       WHERE D.IDPROD = P.IDPROD AND
                             D.IDPEDIDO = C.IDPEDIDO AND
                             C.TIPCOM ='FACTURA' AND
                             C.NCOMP = CodigoF AND
                             C.ESTADO ='PAGADO');
BEGIN
        SELECT CABECERA_PEDIDO.IDPEDIDO,CABECERA_PEDIDO.IDCLI,
               CABECERA_PEDIDO.IDEMP,COMPROBANTE.ESTADO
        INTO CodigoP, CodigoC,CodigoE, Est 
        FROM CABECERA_PEDIDO, COMPROBANTE
        WHERE CABECERA_PEDIDO.IDPEDIDO = COMPROBANTE.IDPEDIDO AND
              COMPROBANTE.TIPCOM='FACTURA' AND
              COMPROBANTE.NCOMP = CodigoF; 
       
       SELECT NOMBRE INTO NombreCli FROM CLIENTE WHERE IDCLI=CodigoC;
       SELECT NOMBRE INTO NombreEmp FROM EMPLEADO WHERE IDEMP=CodigoE;
       DBMS_OUTPUT.PUT_LINE('==================================================');
       DBMS_OUTPUT.PUT_LINE('IMPORTADORA - LAS CAMELIAS S.A');
       DBMS_OUTPUT.PUT_LINE('==================================================');
       DBMS_OUTPUT.PUT_LINE('FACTURA Nº  : ' || CodigoF);
       DBMS_OUTPUT.PUT_LINE('PEDIDO  Nº  : ' || CodigoP);
       DBMS_OUTPUT.PUT_LINE('CLIENTE     : ' || NombreCli);
       DBMS_OUTPUT.PUT_LINE('EMPLEADO    : ' || NombreEmp);
       DBMS_OUTPUT.PUT_LINE('==================================================');
       OPEN DETALLE;
       FETCH DETALLE INTO It, NombreProd, CantProd, PreProd, ImpCompra;
       WHiLE DETALLE%Found
       LOOP
           DBMS_OUTPUT.PUT_LINE(It || CHR(9) || NombreProd || CHR(9));
           DBMS_OUTPUT.PUT_LINE(CHR(9) || 'Cantidad: ' ||CantProd || CHR(9) ||
           'Precio: ' ||PreProd || CHR(9) || 'Importe: ' ||ImpCompra);
           DBMS_OUTPUT.PUT_LINE('==================================================');
           FETCH DETALLE INTO It, NombreProd, CantProd, PreProd, ImpCompra;
       END LOOP;
       SELECT SUM(D.CANT* P.PRECIO) INTO TOTAL_IMPORTE FROM DETALLE_PEDIDO D, PRODUCTO P
       WHERE D.IDPROD = P.IDPROD AND D.IDPEDIDO = CodigoP;
       IGV := TOTAL_IMPORTE * 0.18;
       TOTAL_GENERAL := TOTAL_IMPORTE + IGV;
       DBMS_OUTPUT.PUT_LINE('TOTAL IMPORTE: ' || TOTAL_IMPORTE);
       DBMS_OUTPUT.PUT_LINE('IGV (18%)    : ' || IGV);
       DBMS_OUTPUT.PUT_LINE('TOTAL IMPORTE: ' || TOTAL_GENERAL);
       DBMS_OUTPUT.PUT_LINE('==================================================');
     CLOSE DETALLE;
END;


